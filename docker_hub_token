#!/bin/bash
#-------------------------------------------------------------------------------------
# This script retrieves the authentication token for a Docker Registry.
# 
# Assumes v2 because no token is needed for v1.
#-------------------------------------------------------------------------------------

## template
CURR_DIR=$(dirname $0);
PROJ_DIR=${CURR_DIR}/../..;
CONF_DIR=${PROJ_DIR}/conf.d;
SETUP_DIR=${PROJ_DIR}/.setup;
${CURR_DIR}/utils/directories_exist;
if [[ $? != '0' ]]; then exit 1; fi;

## constants
KEY='DOCKER_HUB_TOKEN';
CONF_FILE_PATH="${CONF_DIR}/${KEY}";
OUTPUT_FILE="${SETUP_DIR}/${KEY}";
DOCKER_HUB_URL=$(${CURR_DIR}/docker_hub_url);

## processing
DOCKER_HUB_TOKEN=0;
_=$(stat ${CONF_FILE_PATH} &>/dev/null);
if [[ $? = "0" ]]; then DOCKER_HUB_TOKEN=$(cat ${CONF_FILE_PATH}); fi;
if [[ ${DOCKER_HUB_TOKEN} = '0' ]]; then
  if [[ ${DOCKER_HUB_USERNAME} = "" ]] || [[ ${DOCKER_HUB_PASSWORD} = "" ]]; then
    ${CURR_DIR}/utils/error "${CONF_FILE_PATH} did not exist. Unable to retrieve authorisation token for authenticating with the Docker Registry API.\n\n\tDefine \033[1m\$DOCKER_HUB_USERNAME\033[0m\033[31m and \033[1m\$DOCKER_HUB_PASSWORD\033[0m\033[31m environment variables so we can do the authentication!";
    exit 1;
  else
    DOCKER_HUB_TOKEN=$(
      curl -sSlfa -H "Content-Type: application/json" -d "{\"username\":\"${DOCKER_HUB_USERNAME}\",\"password\":\"${DOCKER_HUB_PASSWORD}\"}" \
        -X POST "${DOCKER_HUB_URL}/v2/users/login" | cut -f 4 -d "\""
    );
  fi;
fi;

## output
printf "${DOCKER_HUB_TOKEN}" > "${OUTPUT_FILE}" | cat;
